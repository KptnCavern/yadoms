package protobufMessage;

enum VERSION { CURRENT = 1; }

message Request
{
   // Main interface version (for future use...)
   optional VERSION version = 1 [default = CURRENT];

   message GetKeywordId
   {
      required string deviceName = 1;
      required string keywordName = 2;
   }
   optional GetKeywordId getKeywordId = 2;

   message GetRecipientId
   {
      required string firstName = 1;
      required string lastName = 2;
   }
   optional GetRecipientId getRecipientId = 3;

   message ReadKeyword
   {
      required int32 keywordId = 1;
   }
   optional ReadKeyword readKeyword = 4;

   message WaitForNextAcquisition
   {
      required int32 keywordId = 1;
      optional string timeout = 2;
   }
   optional WaitForNextAcquisition waitForNextAcquisition = 5;

   message WaitForNextAcquisitions
   {
      repeated int32 keywordId = 1;
      optional string timeout = 2;
   }
   optional WaitForNextAcquisitions waitForNextAcquisitions = 6;

   message WaitForEvent
   {
      repeated int32 keywordId = 1;
      required bool receiveDateTimeEvent = 2;
      optional string timeout = 3;
   }
   optional WaitForEvent waitForEvent = 7;

   message WriteKeyword
   {
      required int32 keywordId = 1;
      required string newState = 2;
   }
   optional WriteKeyword writeKeyword = 8;

   message SendNotification
   {
      required int32 keywordId = 1;
      required int32 recipientId = 2;
      required string message = 3;
   }
   optional SendNotification sendNotification = 9;

   message GetInfo
   {
      enum Key { kSunrise = 0; kSunset = 1; kLatitude = 2; kLongitude = 3; kAltitude = 4; kYadomsServerOS = 5; kYadomsServerVersion = 6; }
      required Key key = 1;
   }
   optional GetInfo getInfo = 10;
}

message Answer
{
   // Main interface version (for future use...)
   optional VERSION version = 1 [default = CURRENT];

   optional string error = 2;
   
   message GetKeywordId
   {
      required int32 id = 1;
   }
   optional GetKeywordId getKeywordId = 3;
   
   message GetRecipientId
   {
      required int32 id = 1;
   }
   optional GetRecipientId getRecipientId = 4;
   
   message ReadKeyword
   {
      required string value = 1;
   }
   optional ReadKeyword readKeyword = 5;
   
   message WaitForNextAcquisition
   {
      required string acquisition = 1;
   }
   optional WaitForNextAcquisition waitForNextAcquisition = 6;
   
   message WaitForNextAcquisitions
   {
      required int32 keywordId = 1;
      optional string acquisition = 2;
   }
   optional WaitForNextAcquisitions waitForNextAcquisitions = 7;
   
   message WaitForEvent
   {
      enum EventType { kTimeout = 0; kKeyword = 1; kDateTime = 2; }
      required EventType type = 1;
      required int32 keywordId = 2;
      optional string acquisition = 3;
   }
   optional WaitForEvent waitForEvent = 8;
   
   message WriteKeyword
   {
   }
   optional WriteKeyword writeKeyword = 9;
   
   message SendNotification
   {
   }
   optional SendNotification sendNotification = 10;

   message GetInfo
   {
      required string value = 1;
   }
   optional GetInfo getInfo = 11;
}
