# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

# version format
version: 1.0.{build}

# Build worker image (VM template)
image: Visual Studio 2015

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# Add pre-compiled dependancies in cache
cache:
  - ../boost_1_61_0
  - ../poco-1.7.7-all
  - ../OpenSSL-1.1.0d
  - ../protobuf-3.1.0
  - ../swig-3.0.8
  - ../pgsql-9.6.1
  - ../gammu-1.38.1-yadoms

# scripts that run after cloning repository
install:
  - ps: pushd ..
  - ps: if (-Not(Test-Path 'boost_1_61_0')) { Invoke-WebRequest http://yadoms.com/appveyor_build/boost_1_61_0-build.7z -OutFile boost.7z; 7z x boost.7z -bso0 }
  - ps: if (-Not(Test-Path 'poco-1.7.7-all')) { Invoke-WebRequest http://yadoms.com/appveyor_build/poco-1.7.7-all-build.7z -OutFile poco.7z; 7z x poco.7z -bso0 }
  - ps: if (-Not(Test-Path 'OpenSSL-1.1.0d')) { Invoke-WebRequest http://yadoms.com/appveyor_build/OpenSSL-1.1.0d-build.7z -OutFile OpenSSL.7z; 7z x OpenSSL.7z -bso0 }
  - ps: if (-Not(Test-Path 'swig-3.0.8')) { Invoke-WebRequest http://yadoms.com/appveyor_build/swigwin-3.0.8-build.7z -OutFile swig.7z; 7z x swig.7z -bso0 }
  - ps: if (-Not(Test-Path 'protobuf-3.1.0')) { Invoke-WebRequest http://yadoms.com/appveyor_build/protobuf-3.1.0-build.7z -OutFile protobuf.7z; 7z x protobuf.7z -bso0 }
  - ps: if (-Not(Test-Path 'pgsql-9.6.1')) { Invoke-WebRequest http://yadoms.com/appveyor_build/pgsql-9.6.1-build.7z -OutFile pgsql.7z; 7z x pgsql.7z -bso0 }
  - ps: if (-Not(Test-Path 'gammu-1.38.1-yadoms')) { Invoke-WebRequest http://yadoms.com/appveyor_build/gammu-1.38.1-yadoms-build.7z -OutFile gammu.7z; 7z x gammu.7z -bso0 }
  - ps: rm *.7z
  - ps: popd
  - ps: echo "[END] install"

# scripts to run before build
before_build:
  # Some information
  - ps: echo "Current directory = $pwd"
  
  # Yadoms configuration file
  - ps: echo "Configuring Yadoms CMakeListsUserConfig.txt"
  - ps: $cd_for_cmake="$pwd".Replace("\", "/")
  - ps: echo $cd_for_cmake
  - ps: Set-Content 'sources/CMakeListsUserConfig.txt' ('set(BOOST_ROOT "' + $cd_for_cmake + '/../boost_1_61_0")')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(POCO_ROOT "' + $cd_for_cmake + '/../poco-1.7.7-all")')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(OPENSSL_ROOT "' + $cd_for_cmake + '/../OpenSSL-1.1.0d")')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(PROTOBUF_ROOT "' + $cd_for_cmake + '/../protobuf-3.1.0")')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(SWIG_ROOT "' + $cd_for_cmake + '/../swig-3.0.8")')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(PostgreSQL_ROOT "' + $cd_for_cmake + '/../pgsql-9.6.1")')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(GAMMU_ROOT "' + $cd_for_cmake + '/../gammu-1.38.1-yadoms")')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(PYTHON_ROOT "C:/Python27")')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(COTIRE_USE ON)')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(COTIRE_USE_UNITY ON)')
  - ps: Add-Content 'sources/CMakeListsUserConfig.txt' ('set(PYTHON_USE_SOURCES OFF)')
  
  # Create solution
  - cmd: cmake_windows.cmd
  
  
build:
  parallel: true                  # enable MSBuild parallel builds
  project: projects/yadoms.sln    # path to Visual Studio solution or project

  # MSBuild verbosity level
  verbosity: detailed